<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakePresetLoader">{
  &quot;useNewFormat&quot;: true
}</component>
  <component name="CMakeProjectFlavorService">
    <option name="flavorId" value="CMakePlainProjectFlavor" />
  </component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="toy_renderer" targetName="uninstall" />
      <config projectName="toy_renderer" targetName="glad" />
      <config projectName="toy_renderer" targetName="imgui" />
      <config projectName="toy_renderer" targetName="glfw" />
      <config projectName="toy_renderer" targetName="toy_renderer" />
      <config projectName="toy_renderer" targetName="update_mappings" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="aac8d94e-3228-4f47-8594-fe1b51b1c8f0" name="更改" comment="">
      <change beforePath="$PROJECT_DIR$/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/camera/perspective.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/camera/perspective.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/io/viewer.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/io/viewer.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/io/viewer.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/io/viewer.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/ui/ui_manager.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/ui/ui_manager.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/ui/ui_manager.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/ui/ui_manager.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_allegro5.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_allegro5.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_allegro5.h" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_allegro5.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_android.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_android.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_android.h" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_android.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_dx10.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_dx10.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_dx10.h" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_dx10.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_dx11.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_dx11.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_dx11.h" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_dx11.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_dx12.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_dx12.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_dx12.h" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_dx12.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_dx9.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_dx9.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_dx9.h" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_dx9.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_glfw.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_glfw.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_glfw.h" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_glfw.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_glut.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_glut.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_glut.h" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_glut.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_metal.h" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_metal.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_metal.mm" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_metal.mm" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_opengl2.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_opengl2.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_opengl2.h" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_opengl2.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_opengl3.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_opengl3.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_opengl3.h" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_opengl3.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_osx.h" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_osx.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_osx.mm" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_osx.mm" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_sdl2.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_sdl2.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_sdl2.h" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_sdl2.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_sdl3.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_sdl3.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_sdl3.h" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_sdl3.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_sdlgpu3.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_sdlgpu3.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_sdlgpu3.h" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_sdlgpu3.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_sdlrenderer2.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_sdlrenderer2.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_sdlrenderer2.h" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_sdlrenderer2.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_sdlrenderer3.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_sdlrenderer3.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_sdlrenderer3.h" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_sdlrenderer3.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_vulkan.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_vulkan.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_vulkan.h" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_vulkan.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_wgpu.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_wgpu.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_wgpu.h" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_wgpu.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_win32.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_win32.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_win32.h" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/backends/imgui_impl_win32.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_allegro5/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_allegro5/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_android_opengl3/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_android_opengl3/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_android_opengl3/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_android_opengl3/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_apple_metal/main.mm" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_apple_metal/main.mm" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_apple_opengl2/main.mm" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_apple_opengl2/main.mm" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_glfw_metal/main.mm" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_glfw_metal/main.mm" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_glfw_opengl2/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_glfw_opengl2/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_glfw_opengl3/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_glfw_opengl3/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_glfw_vulkan/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_glfw_vulkan/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_glfw_vulkan/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_glfw_vulkan/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_glfw_wgpu/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_glfw_wgpu/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_glfw_wgpu/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_glfw_wgpu/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_glut_opengl2/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_glut_opengl2/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_null/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_null/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_sdl2_directx11/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_sdl2_directx11/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_sdl2_metal/main.mm" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_sdl2_metal/main.mm" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_sdl2_opengl2/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_sdl2_opengl2/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_sdl2_opengl3/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_sdl2_opengl3/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_sdl2_sdlrenderer2/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_sdl2_sdlrenderer2/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_sdl2_vulkan/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_sdl2_vulkan/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_sdl3_opengl3/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_sdl3_opengl3/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_sdl3_sdlgpu3/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_sdl3_sdlgpu3/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_sdl3_sdlrenderer3/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_sdl3_sdlrenderer3/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_sdl3_vulkan/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_sdl3_vulkan/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_win32_directx10/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_win32_directx10/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_win32_directx11/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_win32_directx11/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_win32_directx12/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_win32_directx12/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_win32_directx9/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_win32_directx9/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_win32_opengl3/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_win32_opengl3/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/examples/example_win32_vulkan/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/examples/example_win32_vulkan/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/misc/cpp/imgui_stdlib.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/misc/cpp/imgui_stdlib.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/misc/freetype/imgui_freetype.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/misc/freetype/imgui_freetype.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/imgui/misc/freetype/imgui_freetype.h" beforeDir="false" afterPath="$PROJECT_DIR$/third_party/imgui/misc/freetype/imgui_freetype.h" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="CMakeLists.txt" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2024" />
    <option name="minorVersion" value="3" />
    <option name="productBranch" value="Classic" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2uRIwe4Dvg3sQdnYnq1u6Q8kSz8" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "CMake 应用程序.toy_renderer.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.cidr.known.project.marker": "true",
    "RunOnceActivity.git.unshallow": "true",
    "RunOnceActivity.readMode.enableVisualFormatting": "true",
    "RunOnceActivity.west.config.association.type.startup.service": "true",
    "cf.first.check.clang-format": "false",
    "cidr.known.project.marker": "true",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "/media/ftc/G/code/toy_renderer",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.fileTypes",
    "structure.view.defaults.are.configured": "true",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/io" />
      <recent name="$PROJECT_DIR$/third_party" />
    </key>
  </component>
  <component name="RunManager" selected="CMake 应用程序.toy_renderer">
    <configuration default="true" type="CLionExternalRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="CLION.EXTERNAL.BUILD" enabled="true" />
      </method>
    </configuration>
    <configuration name="glad" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="toy_renderer" TARGET_NAME="glad" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="glfw" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="toy_renderer" TARGET_NAME="glfw" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="imgui" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="toy_renderer" TARGET_NAME="imgui" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="toy_renderer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="toy_renderer" TARGET_NAME="toy_renderer" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="toy_renderer" RUN_TARGET_NAME="toy_renderer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="uninstall" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="toy_renderer" TARGET_NAME="uninstall" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="update_mappings" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="toy_renderer" TARGET_NAME="update_mappings" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake 应用程序.glad" />
      <item itemvalue="CMake 应用程序.glfw" />
      <item itemvalue="CMake 应用程序.imgui" />
      <item itemvalue="CMake 应用程序.toy_renderer" />
      <item itemvalue="CMake 应用程序.uninstall" />
      <item itemvalue="CMake 应用程序.update_mappings" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="默认任务">
      <changelist id="aac8d94e-3228-4f47-8594-fe1b51b1c8f0" name="更改" comment="" />
      <created>1742205199691</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1742205199691</updated>
      <workItem from="1742205200801" duration="155000" />
      <workItem from="1742205362962" duration="3982000" />
      <workItem from="1742209353664" duration="5155000" />
      <workItem from="1742259846555" duration="5000" />
      <workItem from="1742259859074" duration="6657000" />
      <workItem from="1742369410903" duration="1000" />
      <workItem from="1742369421777" duration="16957000" />
      <workItem from="1742465648120" duration="3000" />
      <workItem from="1742465657696" duration="9289000" />
      <workItem from="1742520318198" duration="9000" />
      <workItem from="1742520333504" duration="5774000" />
      <workItem from="1742627038027" duration="9451000" />
      <workItem from="1742711148842" duration="7530000" />
      <workItem from="1742807645310" duration="1000" />
      <workItem from="1742807654992" duration="9934000" />
      <workItem from="1742864117527" duration="7893000" />
      <workItem from="1742970815857" duration="14318000" />
      <workItem from="1743228450842" duration="426000" />
      <workItem from="1743229644115" duration="2112000" />
      <workItem from="1743320097071" duration="6000" />
      <workItem from="1743320112641" duration="3000" />
      <workItem from="1743320124546" duration="8448000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VCPKGProject">
    <isAutomaticCheckingOnLaunch value="false" />
    <isAutomaticFoundErrors value="true" />
    <isAutomaticReloadCMake value="true" />
  </component>
</project>